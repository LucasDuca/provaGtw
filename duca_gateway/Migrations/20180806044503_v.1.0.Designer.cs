// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using duca_gateway.Models;

namespace duca_gateway.Migrations
{
    [DbContext(typeof(duca_gtwContext))]
    [Migration("20180806044503_v.1.0")]
    partial class v10
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("duca_gateway.Models.Configuracao", b =>
                {
                    b.Property<int>("IdConfiguracao")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id_configuracao")
                        .HasColumnType("int(11)");

                    b.Property<string>("Antifraude")
                        .IsRequired()
                        .HasColumnName("antifraude")
                        .HasColumnType("char(1)");

                    b.Property<string>("Cielo")
                        .IsRequired()
                        .HasColumnName("cielo")
                        .HasColumnType("char(1)");

                    b.Property<string>("Cielokey")
                        .HasColumnName("cielokey")
                        .HasColumnType("varchar(45)");

                    b.Property<int>("IdLojista")
                        .HasColumnName("id_lojista")
                        .HasColumnType("int(11)");

                    b.Property<string>("RuleMaster")
                        .HasColumnName("rule_master")
                        .HasColumnType("char(1)");

                    b.Property<string>("RuleVisa")
                        .HasColumnName("rule_visa")
                        .HasColumnType("char(1)");

                    b.Property<string>("Stone")
                        .IsRequired()
                        .HasColumnName("stone")
                        .HasColumnType("char(1)");

                    b.Property<string>("Stonekey")
                        .HasColumnName("stonekey")
                        .HasColumnType("varchar(45)");

                    b.HasKey("IdConfiguracao");

                    b.HasIndex("IdLojista")
                        .HasName("FK_LOJISTA_idx");

                    b.ToTable("configuracao");
                });

            modelBuilder.Entity("duca_gateway.Models.Lojista", b =>
                {
                    b.Property<int>("IdLojista")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id_lojista")
                        .HasColumnType("int(11)");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnName("login")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Razaosocial")
                        .IsRequired()
                        .HasColumnName("razaosocial")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnName("senha")
                        .HasColumnType("varchar(10)");

                    b.HasKey("IdLojista");

                    b.ToTable("lojista");
                });

            modelBuilder.Entity("duca_gateway.Models.Transacao", b =>
                {
                    b.Property<int>("IdTransacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id_transacao")
                        .HasColumnType("int(11)");

                    b.Property<string>("Cielo")
                        .HasColumnName("cielo")
                        .HasColumnType("char(1)");

                    b.Property<string>("CreditCard")
                        .IsRequired()
                        .HasColumnName("credit_card")
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnName("descricao")
                        .HasColumnType("varchar(2000)");

                    b.Property<int>("IdLojista")
                        .HasColumnName("id_lojista")
                        .HasColumnType("int(11)");

                    b.Property<string>("Master")
                        .HasColumnName("master")
                        .HasColumnType("char(1)");

                    b.Property<string>("Stone")
                        .HasColumnName("stone")
                        .HasColumnType("char(1)");

                    b.Property<decimal>("Valor")
                        .HasColumnName("valor")
                        .HasColumnType("decimal(15,2)");

                    b.Property<string>("Visa")
                        .HasColumnName("visa")
                        .HasColumnType("char(1)");

                    b.HasKey("IdTransacao");

                    b.HasIndex("IdLojista")
                        .HasName("fk_id_loja_idx");

                    b.ToTable("transacao");
                });

            modelBuilder.Entity("duca_gateway.Models.Configuracao", b =>
                {
                    b.HasOne("duca_gateway.Models.Lojista", "IdLojistaNavigation")
                        .WithMany("Configuracao")
                        .HasForeignKey("IdLojista")
                        .HasConstraintName("FK_LOJISTA");
                });

            modelBuilder.Entity("duca_gateway.Models.Transacao", b =>
                {
                    b.HasOne("duca_gateway.Models.Lojista", "IdLojistaNavigation")
                        .WithMany("Transacao")
                        .HasForeignKey("IdLojista")
                        .HasConstraintName("fk_id_loja");
                });
#pragma warning restore 612, 618
        }
    }
}
